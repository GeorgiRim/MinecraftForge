--- a/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -54,6 +_,7 @@
     public static final int BURN_TIME_STANDARD = 200;
     public static final int BURN_COOL_SPEED = 2;
     public static final int UNKNOWN_LIT_DURATION = 0;
+    private final RecipeType<? extends AbstractCookingRecipe> recipeType;
     protected NonNullList<ItemStack> items = NonNullList.withSize(3, ItemStack.EMPTY);
     int litTime;
     int litDuration = 0;
@@ -106,6 +_,7 @@
     ) {
         super(p_154991_, p_154992_, p_154993_);
         this.quickCheck = RecipeManager.createCheck((RecipeType)p_154994_);
+        this.recipeType = p_154994_;
     }
 
     private boolean isLit() {
@@ -117,9 +_,9 @@
         super.loadAdditional(p_335441_, p_330623_);
         this.items = NonNullList.withSize(this.getContainerSize(), ItemStack.EMPTY);
         ContainerHelper.loadAllItems(p_335441_, this.items, p_330623_);
-        this.litTime = p_335441_.getShort("BurnTime");
-        this.cookingProgress = p_335441_.getShort("CookTime");
-        this.cookingTotalTime = p_335441_.getShort("CookTimeTotal");
+        this.litTime = p_335441_.getInt("BurnTime");
+        this.cookingProgress = p_335441_.getInt("CookTime");
+        this.cookingTotalTime = p_335441_.getInt("CookTimeTotal");
         this.litDuration = 0;
         CompoundTag compoundtag = p_335441_.getCompound("RecipesUsed");
 
@@ -131,9 +_,9 @@
     @Override
     protected void saveAdditional(CompoundTag p_187452_, HolderLookup.Provider p_330192_) {
         super.saveAdditional(p_187452_, p_330192_);
-        p_187452_.putShort("BurnTime", (short)this.litTime);
-        p_187452_.putShort("CookTime", (short)this.cookingProgress);
-        p_187452_.putShort("CookTimeTotal", (short)this.cookingTotalTime);
+        p_187452_.putInt("BurnTime", this.litTime);
+        p_187452_.putInt("CookTime", this.cookingProgress);
+        p_187452_.putInt("CookTimeTotal", this.cookingTotalTime);
         ContainerHelper.saveAllItems(p_187452_, this.items, p_330192_);
         CompoundTag compoundtag = new CompoundTag();
         this.recipesUsed.forEach((p_360478_, p_360479_) -> compoundtag.putInt(p_360478_.location().toString(), p_360479_));
@@ -165,27 +_,31 @@
             }
 
             int i = p_155017_.getMaxStackSize();
-            if (!p_155017_.isLit() && canBurn(p_364207_.registryAccess(), recipeholder, singlerecipeinput, p_155017_.items, i)) {
+            if (!p_155017_.isLit() && p_155017_.canBurn(p_364207_.registryAccess(), recipeholder, singlerecipeinput, p_155017_.items, i)) {
                 p_155017_.litTime = p_155017_.getBurnDuration(p_364207_.fuelValues(), itemstack);
                 p_155017_.litDuration = p_155017_.litTime;
                 if (p_155017_.isLit()) {
                     flag1 = true;
+                    var remainder = itemstack.getCraftingRemainder();
+                    if (!remainder.isEmpty()) {
+                        p_155017_.items.set(1, remainder);
+                    } else
                     if (flag3) {
                         Item item = itemstack.getItem();
                         itemstack.shrink(1);
                         if (itemstack.isEmpty()) {
-                            p_155017_.items.set(1, item.getCraftingRemainder());
+                            p_155017_.items.set(1, remainder);
                         }
                     }
                 }
             }
 
-            if (p_155017_.isLit() && canBurn(p_364207_.registryAccess(), recipeholder, singlerecipeinput, p_155017_.items, i)) {
+            if (p_155017_.isLit() && p_155017_.canBurn(p_364207_.registryAccess(), recipeholder, singlerecipeinput, p_155017_.items, i)) {
                 p_155017_.cookingProgress++;
                 if (p_155017_.cookingProgress == p_155017_.cookingTotalTime) {
                     p_155017_.cookingProgress = 0;
                     p_155017_.cookingTotalTime = getTotalCookTime(p_364207_, p_155017_);
-                    if (burn(p_364207_.registryAccess(), recipeholder, singlerecipeinput, p_155017_.items, i)) {
+                    if (p_155017_.burn(p_364207_.registryAccess(), recipeholder, singlerecipeinput, p_155017_.items, i)) {
                         p_155017_.setRecipeUsed(recipeholder);
                     }
 
@@ -209,7 +_,7 @@
         }
     }
 
-    private static boolean canBurn(
+    private boolean canBurn(
         RegistryAccess p_266924_,
         @Nullable RecipeHolder<? extends AbstractCookingRecipe> p_299207_,
         SingleRecipeInput p_364069_,
@@ -227,9 +_,9 @@
                 } else if (!ItemStack.isSameItemSameComponents(itemstack1, itemstack)) {
                     return false;
                 } else {
-                    return itemstack1.getCount() < p_155008_ && itemstack1.getCount() < itemstack1.getMaxStackSize()
+                    return (itemstack1.getCount() + itemstack.getCount() <= p_155008_ && itemstack1.getCount() + itemstack.getCount() <= itemstack1.getMaxStackSize()) // Forge fix: make furnace respect stack sizes in furnace recipes
                         ? true
-                        : itemstack1.getCount() < itemstack.getMaxStackSize();
+                        : itemstack1.getCount() + itemstack.getCount() <= itemstack.getMaxStackSize(); // Forge fix: make furnace respect stack sizes in furnace recipes
                 }
             }
         } else {
@@ -237,7 +_,7 @@
         }
     }
 
-    private static boolean burn(
+    private boolean burn(
         RegistryAccess p_266740_,
         @Nullable RecipeHolder<? extends AbstractCookingRecipe> p_299450_,
         SingleRecipeInput p_364092_,
@@ -251,7 +_,7 @@
             if (itemstack2.isEmpty()) {
                 p_267073_.set(2, itemstack1.copy());
             } else if (ItemStack.isSameItemSameComponents(itemstack2, itemstack1)) {
-                itemstack2.grow(1);
+                itemstack2.grow(itemstack1.getCount());
             }
 
             if (itemstack.is(Blocks.WET_SPONGE.asItem()) && !p_267073_.get(1).isEmpty() && p_267073_.get(1).is(Items.BUCKET)) {
@@ -392,5 +_,34 @@
         for (ItemStack itemstack : this.items) {
             p_363325_.accountStack(itemstack);
         }
+    }
+
+    net.minecraftforge.common.util.LazyOptional<? extends net.minecraftforge.items.IItemHandler>[] handlers =
+        net.minecraftforge.items.wrapper.SidedInvWrapper.create(this, Direction.UP, Direction.DOWN, Direction.NORTH);
+
+    @Override
+    public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable Direction facing) {
+        if (capability == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && facing != null && !this.remove) {
+            return switch (facing) {
+                case UP -> handlers[0].cast();
+                case DOWN -> handlers[1].cast();
+                default -> handlers[2].cast();
+            };
+        }
+        return super.getCapability(capability, facing);
+    }
+
+    @Override
+    public void invalidateCaps() {
+        super.invalidateCaps();
+        for (int x = 0; x < handlers.length; x++) {
+            handlers[x].invalidate();
+        }
+    }
+
+    @Override
+    public void reviveCaps() {
+        super.reviveCaps();
+        this.handlers = net.minecraftforge.items.wrapper.SidedInvWrapper.create(this, Direction.UP, Direction.DOWN, Direction.NORTH);
     }
 }
